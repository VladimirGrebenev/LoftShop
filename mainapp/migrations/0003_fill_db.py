# Generated by Django 3.0.6 on 2020-05-18 08:07

from django.db import migrations


def forwards_func(apps, schema_editor):
    pro_cat_model = apps.get_model("mainapp", "ProductCategory")  # Load model for make changes
    pro_model = apps.get_model("mainapp", "Product")  # Load model for make changes
    con_model = apps.get_model("mainapp", "Contact")  # Load model for make changes

    # Create new category
    pro_cat_obj = pro_cat_model.objects.create(
        pk=1,
        name="Кухни", description="Самые крутые кухни в стиле LOFT.")
    # Create new products in this category
    pro_model.objects.create(
        pk=1,
        category=pro_cat_obj,  # Foreign key
        name="Барная стойка Дуб",
        image="products_images/image-300-400-2.jpg",
        short_desc="Идеальный вариант кухни",
        description="Идеальный вариант для вашей кухни в стиле Loft. Круче только у Майкла Джексона.",
        price="69",
        quantity=1,
    )
    pro_model.objects.create(
        pk=4,
        category=pro_cat_obj,  # Foreign key
        name="Полка что надо",
        image="products_images/image-300-400-4.jpg",
        short_desc="Не то что надо, а нужно!",
        description="На эту полочку идеально уместиться всё ваше барахло.",
        price="29",
        quantity=1,
    )
    pro_model.objects.create(
        pk=3,
        category=pro_cat_obj,  # Foreign key
        name="Обеденный стол",
        image="products_images/image-300-400-3.jpg",
        short_desc="Коллекция В большой семье ...",
        description="Коллекция В большой семье рот не разивай, хлебалом не щёлкай, просто создана для дружных семейных обедов.",
        price="99",
        quantity=2,
    )
    del pro_cat_obj  # Delete link for category

    # Create new category
    pro_cat_obj = pro_cat_model.objects.create(
        pk=2,
        name="Спальни", description="Самые крутые спальни в стиле LOFT."
    )
    # Create new products in this category
    pro_model.objects.create(
        pk=5,
        category=pro_cat_obj,  # Foreign key
        name="Дзен Кровать",
        image="products_images/image-300-400-5.jpg",
        short_desc="Из набора Дзен Спальня",
        description="Намасте! Камасутра вам в помощь :)",
        price="1500",
        quantity=1,
    )

    del pro_cat_obj  # Delete link for category

    # Create new category
    pro_cat_obj = pro_cat_model.objects.create(
        pk=3,
        name="Берлоги", description="Самые крутые берлоги для настоящих мужиков!"
    )
    # Create new products in this category
    pro_model.objects.create(
        pk=2,
        category=pro_cat_obj,  # Foreign key
        name="Диван Медведь",
        image="products_images/image-300-400-1.jpg",
        short_desc="Комплект Берлога Сибирская",
        description="Это идеальный диван для настоящей мужской берлоги. На нём удобно смотреть футбол и играть в приставку, пить пиво и беседовать с молодыми ципами (если вы понимаете о чём я :))) )",
        price="29",
        quantity=10,
    )

    del pro_cat_obj  # Delete link for category

    # Create contacts
    con_model.objects.create(
        pk=1,
        phone="+7-888-888-8888", email="info@geekshop.ru", city="Москва", address="В пределах МКАД"
    )
    con_model.objects.create(
        pk=2,
        phone="+7-777-777-7777",
        email="info_yekaterinburg@geekshop.ru",
        city="Екатеринбург",
        address="Близко к центру",
    )
    con_model.objects.create(
        pk=3,
        phone="+7-999-999-9999",
        email="info_vladivostok@geekshop.ru",
        city="Улан-Удэ",
        address="Близко к озеру Байкал",
    )


def reverse_func(apps, schema_editor):
    pro_cat_model = apps.get_model("mainapp", "ProductCategory")  # Load model for make changes
    con_model = apps.get_model("mainapp", "Contact")  # Load model for make changes

    # Delete all objects
    pro_cat_model.objects.all().delete()
    con_model.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [("mainapp", "0002_contact")]

    operations = [migrations.RunPython(forwards_func, reverse_func)]
